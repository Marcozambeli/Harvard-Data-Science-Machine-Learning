Key points
You can think of singular value decomposition (SVD) as an algorithm that finds the vectors 𝑝 and 𝑞 that permit us to write the matrix of residuals 𝑟 with 𝑚 rows and 𝑛 columns in the following way:
𝑟𝑢,𝑖=𝑝𝑢,1𝑞1,𝑖+𝑝𝑢,2𝑞2,𝑖+...+𝑝𝑢,𝑚𝑞𝑚,𝑖,
with the variability of these terms decreasing and the 𝑝’s uncorrelated to each other.
SVD also computes the variabilities so that we can know how much of the matrix’s total variability is explained as we add new terms.
The vectors 𝑞 are called the principal components and the vectors 𝑝 are the user effects. By using principal components analysis (PCA), matrix factorization can capture structure in the data determined by user opinions about movies.
Code
y[is.na(y)] <- 0
y <- sweep(y, 1, rowMeans(y))
pca <- prcomp(y)

dim(pca$rotation)

dim(pca$x)

plot(pca$sdev)

var_explained <- cumsum(pca$sdev^2/sum(pca$sdev^2))
plot(var_explained)

library(ggrepel)
pcs <- data.frame(pca$rotation, name = colnames(y))
pcs %>%  ggplot(aes(PC1, PC2)) + geom_point() + 
     geom_text_repel(aes(PC1, PC2, label=name),
                     data = filter(pcs, 
                                   PC1 < -0.1 | PC1 > 0.1 | PC2 < -0.075 | PC2 > 0.1))

pcs %>% select(name, PC1) %>% arrange(PC1) %>% slice(1:10)

pcs %>% select(name, PC1) %>% arrange(desc(PC1)) %>% slice(1:10)

pcs %>% select(name, PC2) %>% arrange(PC2) %>% slice(1:10)

pcs %>% select(name, PC2) %>% arrange(desc(PC2)) %>% slice(1:10)
