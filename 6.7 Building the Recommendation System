Key points
We start with a model that assumes the same rating for all movies and all users, with all the differences explained by random variation: If  𝜇  represents the true rating for all movies and users and  𝜖  represents independent errors sampled from the same distribution centered at zero, then: 
𝑌𝑢,𝑖=𝜇+𝜖𝑢,𝑖 
In this case, the least squares estimate of  𝜇  — the estimate that minimizes the root mean squared error — is the average rating of all movies across all users.
We can improve our model by adding a term,  𝑏𝑖 , that represents the average rating for movie  𝑖 :
𝑌𝑢,𝑖=𝜇+𝑏𝑖+𝜖𝑢,𝑖 
𝑏𝑖  is the average of  𝑌𝑢,𝑖  minus the overall mean for each movie  𝑖 .

We can further improve our model by adding  𝑏𝑢 , the user-specific effect:
𝑌𝑢,𝑖=𝜇+𝑏𝑖+𝑏𝑢+𝜖𝑢,𝑖 
Note that because there are thousands of  𝑏 's, the lm() function will be very slow or cause R to crash, so we don’t recommend using linear regression to calculate these effects.
Code
Please refer to the textbook for an updated version of the code that may contain some corrections.
mu_hat <- mean(train_set$rating)
mu_hat

naive_rmse <- RMSE(test_set$rating, mu_hat)
naive_rmse

predictions <- rep(2.5, nrow(test_set))
RMSE(test_set$rating, predictions)

rmse_results <- data_frame(method = "Just the average", RMSE = naive_rmse)

# fit <- lm(rating ~ as.factor(userId), data = movielens)
mu <- mean(train_set$rating) 
movie_avgs <- train_set %>% 
     group_by(movieId) %>% 
     summarize(b_i = mean(rating - mu))

movie_avgs %>% qplot(b_i, geom ="histogram", bins = 10, data = ., color = I("black"))

predicted_ratings <- mu + test_set %>% 
     left_join(movie_avgs, by='movieId') %>%
     .$b_i

model_1_rmse <- RMSE(predicted_ratings, test_set$rating)
rmse_results <- bind_rows(rmse_results,
                          data_frame(method="Movie Effect Model",
                                     RMSE = model_1_rmse ))

rmse_results %>% knitr::kable()

train_set %>% 
     group_by(userId) %>% 
     summarize(b_u = mean(rating)) %>% 
     filter(n()>=100) %>%
     ggplot(aes(b_u)) + 
     geom_histogram(bins = 30, color = "black")

# lm(rating ~ as.factor(movieId) + as.factor(userId))
user_avgs <- test_set %>% 
     left_join(movie_avgs, by='movieId') %>%
     group_by(userId) %>%
     summarize(b_u = mean(rating - mu - b_i))

predicted_ratings <- test_set %>% 
     left_join(movie_avgs, by='movieId') %>%
     left_join(user_avgs, by='userId') %>%
     mutate(pred = mu + b_i + b_u) %>%
     .$pred

model_2_rmse <- RMSE(predicted_ratings, test_set$rating)
rmse_results <- bind_rows(rmse_results,
                          data_frame(method="Movie + User Effects Model",  
                                     RMSE = model_2_rmse ))
rmse_results %>% knitr::kable()
